import React, { useContext, useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import UserData from "../../UserData";
import api from "../../services/api";
import Modal from 'react-modal';

import MainTitle from "../../components/title/MainTitle";
import Emoji from 'a11y-react-emoji';
import { FaRegCheckCircle, FaMinusCircle } from 'react-icons/fa';

/**
 *
 * @returns
 */

function ArticleModerate () {

    let { id } = useParams();

    const { userDataValues } = useContext( UserData );
    const [ typeUser, setTypeUser ] = useState( null );
    const [ articleContent, setArticleContent ] = useState({
        data: [],
        error: ""
    });
    const [ loader, setLoader ] = useState( true );
    const [ modalIsOpen, setIsOpen ] = React.useState( false );
    const [ whyNotApproved, setWhyNotApproved ] = useState( "" );

    Modal.setAppElement( '#root' );

    const openModal = function( event ) {
        event.preventDefault();
        setIsOpen( true );
    };
    const closeModal = function() {
        setIsOpen( false );
    };

    const approvedClick = function (e) {
        e.preventDefault();
    }
    const handleSubmitFeedback = function (e) {
        e.preventDefault();
    }

    useEffect(() => {

        setTypeUser( userDataValues.typeUser )


        api
            .get( `posts/${id}` )
            .then( response => {

                setArticleContent({
                    ...articleContent,
                    data: [response.data]
                });
                setTimeout( () =>
                    setLoader( false ),
                    3000
                );
            }).catch( err => {
                setArticleContent({
                    ...articleContent,
                    error: err
                });
            });

    }, [ userDataValues ]);

    const dataPlaceholder = [
        {
            name : "L√≥gica",
            subTitle: "Voc√™ sabe oque √© l√≥gica? Leia o artigo a seguir e confira mais sobre, e confira tamb√©m exemplos a seguir",
            quickDescription: "Lorem Ipsum",
            matter: "L√≥gica",
            scope : "<p><b>A palavra l√≥gica √© origin√°ria do grego logos, que significa linguagem racional. √â por meio do racioc√≠nio l√≥gico que o homem constr√≥i algoritmos que podem ser transformados em programas capazes de solucionar problemas cada vez mais complexos.</b></p><p>A l√≥gica de programa√ß√£o √© necess√°ria para pessoas que desejam trabalhar com desenvolvimento de sistemas e programas, pois ela permite definir a sequ√™ncia l√≥gica para o desenvolvimento. </p><p>A sequ√™ncia l√≥gica s√£o passos executados at√© atingir um objetivo ou solu√ß√£o de um problema.Um algoritmo √© formalmente uma sequ√™ncia finita de passos que levam a execu√ß√£o de uma tarefa. Podemos pensar em algoritmo como uma receita, uma sequ√™ncia de instru√ß√µes que d√£o cabo de uma meta espec√≠fica. Estas tarefas n√£o podem ser redundantes nem subjetivas na sua defini√ß√£o, devem ser claras e precisas.</p><p>Como exemplos de algoritmos podemos citar os algoritmos das opera√ß√µes b√°sicas (adi√ß√£o, multiplica√ß√£o, divis√£o e subtra√ß√£o) de n√∫meros reais decimais.</p><p>Outros exemplos seriam os manuais de aparelhos eletr√¥nicos, como um videocassete, que explicam passo-a-passo como, por exemplo, gravar um evento.</p><p>At√© mesmo as coisas mais simples, podem ser descritas por sequ√™ncias l√≥gicas. <p>Por exemplo:</p> <p>‚Ä¢ Chupar uma bala </p><p>‚Ä¢ Pegar a bala </p><p>‚Ä¢ Retirar o papel </p><p>‚Ä¢ Chupar a bala </p><p>‚Ä¢ Jogar o papel no lixo</p>",
            image: "/",
            altImage: "",
            info: 
            {
                date: "23/11/2022",
                author: "Docens Educacional",
                last: "2 dias"
            },
            support: [
                {
                    name: "A mec√¢nica cl√°ssica",
                    author: "Isaac Newton"
                },
                {
                    name: "https://unicode.org/emoji/charts/full-emoji-list.html",
                    author: "Isaac Newton"
                },
            ],
            observer: ["Aqui est√° relacionado ao rei William, que √© a melhor rota entre Dallas no Texas"],
            tags: [
                "Tag 01", "Tag 02", "Tag 03", "Tag 04"
            ],
            nextMatter:
            {
                name : "Materia 03",
                url : "",
                image: "/",
                imageAlt: ""
            }
        }
    ];

    return (

        <section className="moderate">
            <div className="emoji--title">
                <Emoji className="emoji--navigation" symbol={"üìÉ"} label="love" />
                <MainTitle description="moderar" descriptionUnder="Pubica√ß√µes recentes" isCarousel={false} />
            </div>
            <div className="moderate__actions">
                <button className="moderate__button moderate__true" onClick={approvedClick}>
                    <FaRegCheckCircle className="moderate__icon" /> Aprovar
                </button>
                <button className="moderate__button moderate__false" onClick={openModal}>
                    <FaMinusCircle className="moderate__icon" /> Bloquear
                </button>
            </div>
            {
                true
                ?
                dataPlaceholder.map( ( item, key ) => {
                    return (
                        <div className="moderate__body" key={key}>
                            <h1 className="moderate__title">{ item.title }</h1>
                            <div className="moderate__scope moderate__scope--title">
                                { item.name }
                            </div>
                            <div className="moderate__scope moderate__scope--subTitle">
                                { item.subTitle }
                            </div>
                            <div className="moderate__scope">
                            <div dangerouslySetInnerHTML={{__html: item.scope}} />
                            </div>
                            <div className="moderate__author">
                                <span className="moderate__author__name">Autor: { item.info.author }</span>
                            </div>
                        </div>
                    )
                })
                :
                null
            }
            <Modal
                isOpen={modalIsOpen}
                onRequestClose={closeModal}
                contentLabel={"Example Modal"}
                className="moderate__modal"
            >
                <div className="moderate__feedback">
                    <p>Digite a seguir o motivo:</p>
                    <form onSubmit={handleSubmitFeedback}>
                        <textarea className="moderate__input" value={whyNotApproved} onChange={(e) => setWhyNotApproved(e.target.value)} placeholder="Digite o motivo" cols={20}></textarea>
                        <button className="moderate__submit">
                            Confirmar
                        </button>
                    </form>
                </div>
            </Modal>
        </section>
    );
}

export default ArticleModerate;
